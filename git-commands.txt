ghp_ wrjtiT3D9 SF7nyJdJwYxxiHIADezs Y1gcJHu
git config --local user.name "test"
git config --local user.email test@gmail.com
git config --local mergetool.fugitive.cmd 'nvim -f -c "Gvdiffsplit!" "$MERGED"'
git config --local merge.tool fugitive

Viewing the commit history
--------------------------
git log
git log --stat
git log --oneline
git log --pretty=oneline
git log --pretty=format:"%h %s" --graph
git log --graph --oneline --decorate

Undo a commit
-------------
git revert


Remove file from staging
------------------------
git rm --cached <filename>


Undo the last commit with:
-------------------------
git reset --soft HEAD~1
move the mistakenly committed files back to the staging area


Add patch of file
-----------------
git add -p <filename>


Open commit dialog
-------------------
git commit <enter>


Hide uncommited changes
-----------------------
git stash
git stash apply


git stash or git stash save <name>

git stash list

Unhide uncommited changes
-------------------------
git stash pop or git stash apply <index>

Commit all files except one
---------------------------
git add .
git reset <filename>
git commit -m "message"

git restore <files> to discard changes in working directory

How to list all the files in a commit?
--------------------------------------
git diff-tree --no-commit-id --name-only -r <commitid>

How to list committed files that are going to push?
---------------------------------------------------
git show <commitid> --name-only


start a new Git repo for an existing code base
----------------------------------------------
git init
git add .
git commit


git status


If we want to compare specific files between two different commits:
------------------------------------------------------------------
git diff <commit-id1> <commit-id2> <file-list>

show all config values and location
-----------------------------------
git config --list --show-origin

show current user name
----------------------
git config user.name

Remove a specific setting from a specific level of config
---------------------------------------------------------
git config --global --unset user.name

Edit a specific level of config directly
----------------------------------------
git config --global --edit

Remove a section of config for a specific level
-----------------------------------------------
git config --global --remove-section user

Change message of last commit
-----------------------------
git commit --amend -m "revised message!"

you can also push files if you mistakenly forgot earlier
--------------------------------------------------------
git add .
git commit --amend -m "more files added"


If you want to see some abbreviated stats for each commit, you can use the --stat option:
-----------------------------------------------------------------------------------------
$ git log --stat


How do I list all of the files in a commit?
-------------------------------------------
git show --pretty="" --name-only <commit-id>

git show --name-only --oneline <commit-id>




git show HEAD@{0}

case-1 : merge-conflict
-----------------------
1. Make a repo at your github account.
2. Clone in in local with two seprate locations with different local git settings.
