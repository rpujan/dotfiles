Basic Movement
==============
h l k j
b w            word left/right
B W            word left, right
ge e           end of word left/right
{ }            beginning of previous/next paragraph
( )            beginning of previous/next sentence
0 gm           beginning, middle of line
^ $            first, last character of line
nG ngg         line n, default the last, first
nH nL          line n from start, bottom of window
M              middle line of window
^u, ^d         move up, down screen
^b, ^f         page up, down
zz             center this line
zt             top this line
zb             bottom this line
ddkP           Move a line up
ddp            Move a line down
:m +1          moves down 1 line
:m -2          move up 1 lines

^E ^Y          scroll line up, down
^D, ^U         scroll half a page down, up
^F ^B          scroll page up, down

Jumping within a line
---------------------
f<char>        find a character forward in line and move to it.
t<char>        find a character forward till .... (one char before)
F<char>        find a character backward in line and move to it.
T<char>        find a character backward till ... (one char before)
;              next occurance
,              prev occurance
ctrl+o         Navigate to the previous location in the jump list.
ctrl+i         Navigate to the next location in the jump list.
g;             go to the previous change location
g,             go to the newer change location
gi             place the cursor at the same position where it was left last
               time in the insert mode
:jumps         to view the jump list

Insertion & replace
===================
i a            insert before, after cursor
I A            insert at beginning, end of line
o O            open a new line below, above the current line
r[c]           replace character under cursor with c
R              replace chars starting at the cursor
cc or S        change current line
s              delete char and insert
S              delete line and insert
C              delete until end of line and insert
r              replace one char
R              Enter replace mode
u              undo changes
c-r            redo changes

Deletion
========
x X            delete char under, before cursor
dd D           delete current line, to the end of line
J gJ           join current line with next, without space
:rd            delete range r lines
dw             delete word
d2w            delete 2 words
d7j            delete 7 lines below
df'            delete everything in current line from cursor
               until the first occurance of "'" (including char itself)
dt'            same as above (excluding the char)
d/hello        to delete everything until the first occurance of hello
ggdG           to delete complete document
db             delete to beginning of word
d(in vis mod)  delete selection
2dd            delete 2 lines
D              delete rest of line from cursor
C              delete rest of line and insert mode
S              delete entire line and insert mode

dt             delete till
di             delete inside

dl    delete character (alias: "x")   |dl|
diw   delete inner word           		*diw*
daw   delete a word               		*daw*
diW   delete inner WORD (see |WORD|)  *diW*
daW   delete a WORD (see |WORD|)      *daW*
dd    delete one line                 |dd|
dis   delete inner sentence           *dis*
das   delete a sentence           		*das*
dib   delete inner '(' ')' block      *dib*
dab   delete a '(' ')' block          *dab*
dip   delete inner paragraph          *dip*
dap   delete a paragraph          		*dap*
diB   delete inner '{' '}' block      *diB*
daB   delete a '{' '}' block          *daB*

Note the difference between using a movement command and an object.  The
movement command operates from here (cursor position) to where the movement
takes us.  When using an object the whole object is operated upon, no matter
where on the object the cursor is.  For example, compare "dw" and "daw": "dw"
deletes from the cursor position to the start of the next word, "daw" deletes
the word under the cursor and the space after or before it.

Clipboard
=========
p              paste
P              paste before
"*p/"+p        paste from system clipboard
"*y/"+y        paste to system clipboard
yy             copy

Ex commands
===========
:q :q!         quit and confirm, quit and discard changes
:qa            close all files
:w             save
:bd            close file without closing vim
:bd!           close an modified file without saving it
:wq or :x      write the current file and exit
:n :N          edit next, previous file in list
:saveas [filename]    save a new file

select a text/line with visual command and then shift+u to uppercase the letters.

Here are some basic movement commands:
-------------------------------------
e              Move to the end of a word.
w              Move forward to the beginning of a word.
3w             Move forward three words.
W              Move forward a WORD (any non-whitespace characters).
b              Move backward to the beginning of a word.
3b             Move backward three words.
$              Move to the end of the line.
0              Move to the beginning of the line.
^              Move to the first non-blank character of the line.
)              Jump forward one sentence.
(              Jump backward one sentence.
}              Jump forward one paragraph.
{              Jump backward one paragraph.
j              Jump forward one line.
10j            Jump forward 10 lines
k              Jump backward one line.
10k            Jump backward 10 lines.
H              Jump to the top of the screen.
M              Jump to the middle of the screen.
L              Jump to the bottom of the screen.
10<PageUp> or 10<CTRL-B>    Move 10 pages up.
5<PageDown> or 5<CTRL-F>    Move 5 pages down.
G              Jump to end of file.
g              Jump x screen lines in direction (up,down,left,right) - useful for moving through a long, wrapped line of text.
1G             Jump to beginning of file (same as gg).
50G            Jump to line 50.
mx             Set mark x at the current cursor position.
'x             Jump to the beginning of the line of mark x.
`x             Jump to the cursor position of mark x.
''             Return to the line where the cursor was before the latest jump.    (Two single quotes.)
``             Return to the cursor position before the latest jump (undo the jump).
               (Two back ticks. This is above the Tab key on some keyboards.)
'.             Jump to the last-changed line.
%              Jump to corresponding item, e.g. from an open brace to its matching closing brace. See Moving to matching braces for more.
|              Jump to the 1st column of the current line.
42|            Jump to the 42nd column of the current line.
g;             Jump to the place of last edit. Can be quite helpful while debugging or editing files.

these commands to easily switch between buffers:
-----------------------------------------------
:bf            # Go to first file.
:bl            # Go to last file
:bn            # Go to next file.
:bp            # Go to previous file.
:b number      # Go to n'th file (E.g :b 2)
:bw            # Close current file.
:buffers or :ls or :files # list of all opened buffers

Jumping back and forth in Normal mode
-------------------------------------
Ctrl+o   navigate to the previous location in the jump list (think o as old)
Ctrl+i   navigate to the next location in the jump list (i and o are usually next to each other)
g;       go to the previous change location
g,       go to the newer change location
gi       place the cursor at the same position where it was left last time in the Insert mode

Use :jumps to view the jumps list.

Search word nearest to the cursor
---------------------------------
* : searches the word nearest to the cursor in the forward direction (matches only the whole word)
# : searches the word nearest to the cursor in the backward direction (matches only the whole word)

g* : searches the word nearest to the cursor in the forward direction (matches as part of another word as well)
g# : searches the word nearest to the cursor in the backward direction (matches as part of another word as well)

Move screen without moving cursor
---------------------------------
Ctrl-y Moves screen up one line
Ctrl-e Moves screen down one line
Ctrl-u Moves cursor & screen up ½ page
Ctrl-d Moves cursor & screen down ½ page
Ctrl-b Moves screen up one page, cursor to last line
Ctrl-f Moves screen down one page, cursor to first line

Ctrl-y and Ctrl-e only change the cursor position if it would be moved off screen.

Suspend and resume
------------------
Ctrl+Z : to suspend vim and go back to shell
fg     : resume

Copy Paste
----------
Copy: ya{([ or yi{([
move: 3j
paste: viw or viW

Advanced Features:
-----------------
- Auto-complete
- Buffers
- Recording
- : norm
- : ! command
- Open files / URLs with gf / gx

VS Code (with Vim enabled):
---------------------------
Ctrl + ` : Focus terminal windows
Ctrl + 1 : Focus code windows
Ctrl + Shift + e : Move between file explorer windows and editor windows
Ctrl + n : Create new file in file explorer windows.
Ctrl + Shift + n : Create a new folder in file explorer windows.
